function reorderColors()
    local seated_players = getSeatedPlayers()
    local new_order = {}
    
    for i=1,4 do
        if seated_players[i] == "Red" then
            new_order[#new_order+1] = seated_players[i]
        end
    end

    for i=1,4 do
        if seated_players[i] == "Teal" then
            new_order[#new_order+1] = seated_players[i]
        end
    end

    for i=1,4 do
        if seated_players[i] == "Yellow" then
            new_order[#new_order+1] = seated_players[i]
        end
    end

    for i=1,4 do
        if seated_players[i] == "Purple" then
            new_order[#new_order+1] = seated_players[i]
        end
    end
    return new_order
end


function determinePlayerOrder()
    --[[
    Determine the first player.

    Randomly determines the first player and creates the resulting
    turn order assuming clockwise play around the existing hands.

    Returns
    -------
    table
        Integer-indexed table of the string form of Player Colors.

    ]]
    -- Determine where the players are sitting, and assign first player
    Turns.enable = true
    math.randomseed(os.time())
    local Players = getSeatedPlayers()
    local first_player = math.random(1, #Players)
    broadcastToAll(Players[first_player] .. ' will be first player', Color[Players[first_player]])

    local order = reorderColors()
    -- Assume play proceeds clockwise around the existing hands from
    -- the assigned first player
    for i=1,#order do
        if order[i] == Players[first_player] then
            Wrap(order, #order - i + 1)
        end
    end

    printToAll('Turn order for the game will be:', log_message_color)
    for idx, player_color in ipairs(order) do
        printToAll(idx .. ': ' .. player_color, Color[player_color])
    end

    return order

end
